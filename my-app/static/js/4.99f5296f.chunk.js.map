{"version":3,"sources":["api/flickr.tsx","assets/avatar/avatar.jpg","common/colorApp.tsx","components/Header/Header.Styles.tsx","components/Header/Header.tsx","components/Main/Main.Styles.tsx","store/Store.tsx","components/Search/Search.tsx","components/Menu/Menu.Styles.tsx","components/Menu/Menu.tsx","components/Main/Found/Found.Styles.tsx","components/Main/Found/Found.tsx","components/Main/Like/Like.Styles.tsx","components/Main/Like/Like.tsx","components/Main/Main.tsx","components/Footer/Footer.Styles.tsx","components/Footer/Footer.tsx","components/Page/Page.tsx"],"names":["Api","getImages","textValue","page","axios","get","then","response","data","photos","catch","error","process","stdout","write","colorSunlight","colorBone","colorCoal","useStyles","makeStyles","theme","createStyles","backgroundBlock","backgroundColor","logo","fontSize","spacing","color","fontFamily","StyledBadge","withStyles","badge","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Badge","Header","classes","Box","display","justifyContent","pl","pr","pt","pb","className","alignItems","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","AvatarImg","mainBlock","breakpoints","down","search","pageWithImages","likeImages","accessToken","makeAutoObservable","this","autoBind","_this","name","storedJson","localStorage","getItem","set","JSON","parse","autorun","value","toJS","setItem","stringify","autoSave","enteredSearch","arr","elem","_","uniqWith","concat","isEqual","id","remove","item","Search","props","useState","Store","inputText","setInputText","startSearch","setStartSearch","useEffect","onSearch","mx","TextField","autoFocus","fullWidth","label","type","size","onInput","event","target","onKeyPress","key","getSearchQuery","preventDefault","btmMenu","menuBlock","padding","btmMenuBox","margin","Menu","section","setSection","switchSection","toggle","onSwitchPage","borderLeft","borderColor","py","px","IconButton","onClick","mt","root","minWidth","media","btnLikeColor","btnRemovLikeColor","btnLikeFloat","float","btnPagesBlock","textAlign","Found","setSearch","setPage","allPages","setAllPages","allImagesPage","setAllImagesPage","cards","setCards","likedImg","setLikedImg","length","pages","photo","map","getpageWithImages","resultsSearch","img","srcPath","farm","server","secret","stateButton","imgage","disable","some","i","disableButtons","mb","Card","CardActionArea","CardMedia","image","title","CardActions","removedLikedImages","getLikeImages","ButtonGroup","Button","back","String","backPage","disabled","style","forward","forwardPage","flexWrap","Like","savedCards","setSaved–°ards","deletCard","setDeletCard","Main","menuSelector","setMenuSelector","switchPage","minHeight","text","Footer","Link","href","Page","maxWidth"],"mappings":"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","file":"static/js/4.99f5296f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = 'e538ac8584601a9e9bcd4c35b2315eaa';\n\nexport const Api = {\n  getImages(textValue: string, page: string) {\n    return axios\n      .get(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${textValue}&per_page=10&page=${page}&format=json&nojsoncallback=1`\n      )\n      .then((response) => response.data.photos)\n      .catch((error) => {\n        process.stdout.write('Error fetching posts: ', error);\n      });\n  },\n};\n\nexport default Api;\n","export default __webpack_public_path__ + \"static/media/avatar.67396a8f.jpg\";","export const colorSunlight = '#f9ba32';\nexport const colorBone = '#f8f1e5';\nexport const colorCoal = '#2f3131';\n","import {\n  makeStyles,\n  createStyles,\n  Theme,\n  withStyles,\n} from '@material-ui/core/styles';\n\nimport { Badge } from '@material-ui/core/';\nimport { colorCoal, colorSunlight } from '../../common/colorApp';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backgroundBlock: {\n      backgroundColor: colorSunlight,\n    },\n\n    logo: {\n      fontSize: theme.spacing(3),\n      color: colorCoal,\n      fontFamily: 'Righteous',\n    },\n  })\n);\n\nexport const StyledBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: '#44b700',\n      color: '#44b700',\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      '&::after': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        animation: '$ripple 1.2s infinite ease-in-out',\n        border: '1px solid currentColor',\n        content: '\"\"',\n      },\n    },\n    '@keyframes ripple': {\n      '0%': {\n        transform: 'scale(.8)',\n        opacity: 1,\n      },\n      '100%': {\n        transform: 'scale(2.4)',\n        opacity: 0,\n      },\n    },\n  })\n)(Badge);\n","import React from 'react';\nimport { Box, Avatar } from '@material-ui/core/';\nimport AvatarImg from '../../assets/avatar/avatar.jpg';\nimport { useStyles, StyledBadge } from './Header.Styles';\n\ninterface IHeader {}\n\nconst Header: React.FC<IHeader> = () => {\n  const classes = useStyles();\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      pl={4}\n      pr={4}\n      pt={1}\n      pb={1}\n      className={classes.backgroundBlock}\n    >\n      <Box display=\"flex\" alignItems=\"center\" className={classes.logo}>\n        Seacrh IMG\n      </Box>\n      <StyledBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        variant=\"dot\"\n      >\n        <Avatar alt=\"Avatar\" src={AvatarImg} />\n      </StyledBadge>\n    </Box>\n  );\n};\n\nexport default Header;\n","import { red } from '@material-ui/core/colors';\nimport {\n  makeStyles,\n  createStyles,\n  Theme,\n  createTheme,\n} from '@material-ui/core/styles';\nimport { colorBone } from '../../common/colorApp';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainBlock: {\n      display: 'flex',\n      backgroundColor: colorBone,\n      [theme.breakpoints.down('xs')]: {\n        display: 'block',\n      },\n    },\n  })\n);\n","import { makeAutoObservable, autorun, set, toJS } from 'mobx';\nimport _ from 'lodash';\nimport { IBodyImg } from '../common/interfaces';\n\n// eslint-disable-next-line\nexport function autoSave(_this: any, name: string) {\n  const storedJson = localStorage.getItem(name);\n  if (storedJson) {\n    set(_this, JSON.parse(storedJson));\n  }\n  autorun(() => {\n    const value = toJS(_this);\n    localStorage.setItem(name, JSON.stringify(value));\n  });\n}\n\nclass Store {\n  search: string = '';\n\n  page: string = '1';\n\n  pageWithImages: Array<IBodyImg> = [];\n\n  likeImages: Array<IBodyImg> = [];\n\n  public accessToken: string;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n    this.accessToken = '';\n    autoSave(this, 'authStore');\n  }\n\n  getSearchQuery(enteredSearch: string) {\n    this.search = enteredSearch;\n  }\n\n  getpageWithImages(arr: Array<IBodyImg>) {\n    this.pageWithImages = arr;\n  }\n\n  getLikeImages(elem: IBodyImg) {\n    this.likeImages = _.uniqWith(this.likeImages.concat(elem), _.isEqual);\n  }\n\n  removedLikedImages(id: string) {\n    this.likeImages = _.remove(this.likeImages, (item) => item.id !== id);\n  }\n}\n\nexport default new Store();\n","import React, { useState, useEffect } from 'react';\nimport { Box, TextField } from '@material-ui/core';\nimport Store from '../../store/Store';\n\ninterface ISearch {\n  onSearch(text: string): void;\n}\n\nconst Search: React.FC<ISearch> = (props) => {\n  const [inputText, setInputText] = useState<string>(Store.search);\n  const [startSearch, setStartSearch] = useState<string>('img');\n\n  const changeHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  const keyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      Store.getSearchQuery(inputText);\n      setStartSearch(inputText);\n      event.preventDefault();\n    }\n  };\n\n  useEffect(() => {\n    props.onSearch(startSearch);\n  });\n\n  return (\n    <Box mx=\"auto\" width=\"80%\">\n      <TextField\n        autoFocus\n        fullWidth={true}\n        id=\"outlined-search\"\n        label=\"Search images\"\n        type=\"search\"\n        variant=\"outlined\"\n        size=\"small\"\n        onInput={changeHandle}\n        onKeyPress={keyPressHandler}\n      />\n    </Box>\n  );\n};\n\nexport default Search;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { colorCoal } from '../../common/colorApp';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    btmMenu: {\n      color: colorCoal,\n    },\n    menuBlock: {\n      display: 'block',\n      [theme.breakpoints.down('xs')]: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        padding: 0,\n      },\n    },\n    btmMenuBox: {\n      [theme.breakpoints.down('xs')]: {\n        margin: 0,\n      },\n    },\n  })\n);\n","import React, { useState, useEffect } from 'react';\nimport { Box, IconButton } from '@material-ui/core/';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useStyles } from './Menu.Styles';\n\ninterface IMenu {\n  onSwitchPage(text: string): void;\n}\n\nconst Menu: React.FC<IMenu> = (props) => {\n  const [section, setSection] = useState<string>('found');\n\n  const classes = useStyles();\n  const colorBorder = '#2f3131';\n\n  const switchSection = (toggle: string) => {\n    setSection(toggle);\n  };\n\n  useEffect(() => {\n    props.onSwitchPage(section);\n  }, [section]);\n\n  return (\n    <Box\n      border={2}\n      borderLeft={0}\n      borderColor={colorBorder}\n      py={2}\n      px={1}\n      className={classes.menuBlock}\n    >\n      <Box mx=\"auto\" className={classes.btmMenuBox}>\n        <IconButton\n          className={classes.btmMenu}\n          aria-label=\"Home page\"\n          onClick={() => switchSection('found')}\n        >\n          <CloudIcon fontSize=\"large\" />\n        </IconButton>\n      </Box>\n      <Box mx=\"auto\" mt={2} className={classes.btmMenuBox}>\n        <IconButton\n          className={classes.btmMenu}\n          aria-label=\"Home page\"\n          onClick={() => switchSection('liked')}\n        >\n          <ThumbUpAltIcon fontSize=\"large\" />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Menu;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { colorCoal, colorSunlight } from '../../../common/colorApp';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: 250,\n      [theme.breakpoints.down('xs')]: {\n        minWidth: 220,\n      },\n    },\n    media: {\n      height: 180,\n    },\n    btnLikeColor: {\n      color: colorCoal,\n    },\n    btnRemovLikeColor: {\n      color: colorSunlight,\n    },\n    btnLikeFloat: {\n      float: 'right',\n    },\n    btnPagesBlock: {\n      [theme.breakpoints.down('xs')]: {\n        textAlign: 'center',\n      },\n    },\n  })\n);\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardActions,\n  IconButton,\n  ButtonGroup,\n  Button,\n} from '@material-ui/core/';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useStyles } from './Found.Styles';\nimport Store from '../../../store/Store';\nimport { Api } from '../../../api/flickr';\nimport { IBodyImg } from '../../../common/interfaces';\n\ninterface IFound {\n  resultsSearch: string;\n}\n\nconst Found: React.FC<IFound> = (props) => {\n  const [search, setSearch] = useState<string>('');\n  const [page, setPage] = useState<string>('1');\n  const [allPages, setAllPages] = useState<string>('1');\n\n  const [allImagesPage, setAllImagesPage] = useState<Array<IBodyImg>>([]);\n  // eslint-disable-next-line\n  const [cards, setCards] = useState<any>([]);\n  const [likedImg, setLikedImg] = useState<Array<IBodyImg>>([]);\n\n  const classes = useStyles();\n\n  const getSaved–°ards = (elem: IBodyImg) => {\n    Store.getLikeImages(elem);\n    setLikedImg(Store.likeImages);\n  };\n\n  const removeSaved–°ards = (id: string) => {\n    Store.removedLikedImages(id);\n    setLikedImg(Store.likeImages);\n  };\n\n  const backPage = () => {\n    let back = +page;\n    if (back > 1) {\n      back -= 1;\n      setPage(String(back));\n    }\n  };\n\n  const forwardPage = () => {\n    let forward = +page;\n    if (forward < +allPages) {\n      forward += 1;\n      setPage(String(forward));\n    }\n  };\n\n  useEffect(() => {\n    if (search.length !== 0) {\n      const getOnePageImages = Api.getImages(search, page);\n      getOnePageImages.then((response) => {\n        setAllPages(response.pages);\n\n        setAllImagesPage(response.photo.map((item: IBodyImg) => item));\n        Store.getpageWithImages(response.photo.map((item: IBodyImg) => item));\n      });\n    }\n  }, [search, page]);\n\n  useEffect(() => {\n    setSearch(props.resultsSearch);\n  }, [props.resultsSearch]);\n\n  useEffect(() => {\n    setLikedImg(Store.likeImages);\n  }, []);\n\n  useEffect(() => {\n    setPage('1');\n  }, [search]);\n\n  useEffect(() => {\n    setCards(\n      Store.pageWithImages.map((img: IBodyImg) => {\n        const srcPath = `https://farm${img.farm}.staticflickr.com/${img.server}/${img.id}_${img.secret}.jpg`;\n        let stateButton: boolean = false;\n        const disableButtons = (imgage: IBodyImg) => {\n          const disable = likedImg.some((i: IBodyImg) => i.id === imgage.id);\n          stateButton = disable;\n        };\n        disableButtons(img);\n        return (\n          <Box key={img.id} mb={2}>\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={srcPath}\n                  title=\"Contemplative Reptile\"\n                />\n              </CardActionArea>\n              <CardActions className={classes.btnLikeFloat}>\n                {stateButton ? (\n                  <IconButton\n                    onClick={() => {\n                      removeSaved–°ards(img.id);\n                    }}\n                  >\n                    <ThumbUpAltIcon\n                      fontSize=\"large\"\n                      className={classes.btnRemovLikeColor}\n                    />\n                  </IconButton>\n                ) : (\n                  <IconButton\n                    onClick={() => {\n                      getSaved–°ards(img);\n                    }}\n                  >\n                    <ThumbUpAltOutlinedIcon\n                      fontSize=\"large\"\n                      className={classes.btnLikeColor}\n                    />\n                  </IconButton>\n                )}\n              </CardActions>\n            </Card>\n          </Box>\n        );\n      })\n    );\n  }, [allImagesPage, likedImg]);\n\n  return (\n    <Box pt={2}>\n      <Box\n        textAlign=\"right\"\n        mx=\"auto\"\n        width=\"80%\"\n        className={classes.btnPagesBlock}\n      >\n        <ButtonGroup aria-label=\"outlined secondary button group\">\n          <Button onClick={() => backPage()}>One</Button>\n          <Button disabled style={{ color: '#2f3131' }}>\n            {page} of {allPages}\n          </Button>\n          <Button onClick={() => forwardPage()}>Three</Button>\n        </ButtonGroup>\n      </Box>\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-around\" mt={2}>\n        {cards}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Found;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { colorCoal } from '../../../common/colorApp';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: 220,\n      [theme.breakpoints.down('xs')]: {\n        minWidth: 220,\n      },\n    },\n    media: {\n      height: 180,\n    },\n    btnRemovLikeColor: {\n      color: colorCoal,\n    },\n    btnLikeFloat: {\n      float: 'right',\n    },\n  })\n);\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardActions,\n  IconButton,\n} from '@material-ui/core/';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { useStyles } from './Like.Styles';\nimport Store from '../../../store/Store';\nimport { IBodyImg } from '../../../common/interfaces';\n\ninterface ILike {}\n\nconst Like: React.FC<ILike> = (props) => {\n  // eslint-disable-next-line\n  const [cards, setCards] = useState<any>([]);\n\n  const [savedCards, setSaved–°ards] = useState<Array<IBodyImg>>([]);\n  const [deletCard, setDeletCard] = useState<string>('');\n  const classes = useStyles();\n\n  const removeSaved–°ards = (id: string) => {\n    setDeletCard(id);\n    Store.removedLikedImages(id);\n  };\n\n  useEffect(() => {\n    setSaved–°ards(Store.likeImages);\n  }, [deletCard]);\n\n  useEffect(() => {\n    setCards(\n      savedCards.map((img: IBodyImg) => {\n        const srcPath = `https://farm${img.farm}.staticflickr.com/${img.server}/${img.id}_${img.secret}.jpg`;\n        return (\n          <Box key={img.id} mb={2}>\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={srcPath}\n                  title=\"Contemplative Reptile\"\n                />\n              </CardActionArea>\n              <CardActions className={classes.btnLikeFloat}>\n                <IconButton\n                  onClick={() => {\n                    removeSaved–°ards(img.id);\n                  }}\n                >\n                  <DeleteForeverIcon\n                    fontSize=\"large\"\n                    className={classes.btnRemovLikeColor}\n                  />\n                </IconButton>\n              </CardActions>\n            </Card>\n          </Box>\n        );\n      })\n    );\n  }, [savedCards]);\n\n  return (\n    <Box pt={2}>\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-around\" mt={2}>\n        {cards}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Like;\n","import React, { useState } from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core/';\nimport { useStyles } from './Main.Styles';\nimport Search from '../Search/Search';\nimport Menu from '../Menu/Menu';\nimport Found from './Found/Found';\nimport Like from './Like/Like';\n\ninterface IMain {}\n\nconst Main: React.FC<IMain> = (props) => {\n  const [search, setSearch] = useState<string>('');\n  const [menuSelector, setMenuSelector] = useState<string>('found');\n\n  const classes = useStyles();\n\n  const processSearch = (text: string) => {\n    setSearch(text);\n  };\n\n  const switchPage = (page: string) => {\n    setMenuSelector(page);\n  };\n\n  if (menuSelector === 'found') {\n    return (\n      <Box minHeight=\"500px\" className={classes.mainBlock}>\n        <Menu onSwitchPage={switchPage} />\n        <Box py={2} width=\"100%\">\n          <Search onSearch={processSearch} />\n          <Found resultsSearch={search} />\n        </Box>\n      </Box>\n    );\n  }\n  return (\n    <Box minHeight=\"500px\" className={classes.mainBlock}>\n      <Menu onSwitchPage={switchPage} />\n      <Box py={2} width=\"100%\">\n        <Like />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Main;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { colorBone, colorSunlight } from '../../common/colorApp';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backgroundBlock: {\n      backgroundColor: colorSunlight,\n    },\n    logo: {\n      fontSize: theme.spacing(3),\n      color: colorBone,\n      fontFamily: 'Righteous',\n    },\n  })\n);\n","import React from 'react';\nimport { Box, Link } from '@material-ui/core/';\n\nimport { useStyles } from './Footer.Styles';\n\ninterface IFooter {}\n\nconst Footer: React.FC<IFooter> = () => {\n  const classes = useStyles();\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      pl={4}\n      pr={4}\n      pt={1}\n      pb={1}\n      className={classes.backgroundBlock}\n    >\n      <Link\n        href=\"https://github.com/LexSava/test-app\"\n        color=\"inherit\"\n        target=\"_blank\"\n      >\n        App GitHub\n      </Link>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\ninterface IPage {}\n\nconst Page: React.FC<IPage> = (props) => (\n  <Box maxWidth=\"1920px\" mx=\"auto\">\n    <Header />\n    <Main />\n    <Footer />\n  </Box>\n);\nexport default Page;\n"],"sourceRoot":""}